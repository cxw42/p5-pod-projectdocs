package Pod::ProjectDocs::ParserNew;

use strict;
use warnings;

#use base qw(Pod::Simple::XHTML);
use Pod::Simple::XHTML;

sub new {
    my $class = shift;
    my $self = {};
    bless $self, $class;
    return $self;
}

sub local_modules {
    my ($self, $modules) = @_;
}

sub gen_html {
    my($self, %args) = @_;

    my $doc        = $args{doc};
    my $components = $args{components};
    my $mgr_desc   = $args{desc};
    #delete $self->{_source_code};
    my $charset = $doc->config->charset || 'UTF-8';

    my $html_header;
    $html_header .= qq|<html><head><meta http-equiv="Content-Type" content="text/html; charset=$charset" />|;
    $html_header .= $components->{css}->tag($doc);
    $html_header .= '</head><body>';

    my $parser = Pod::Simple::XHTML->new();
    $parser->html_header($html_header);
    $parser->html_footer('<div class="footer">generated by <a href="http://search.cpan.org/perldoc?Pod::ProjectDocs"">Pod::ProjectDocs</a></div></body></html>');
    $parser->index(1);
    $parser->anchor_items(1);
    $parser->no_errata_section( 1 );
    #$self->perldoc_url_prefix( $self->perldoc_url_prefix );
    #$self->link_mappings( $self->link_mappings );

    # open(my $source_fh, "<:encoding($charset)", $doc->origin) or warn $!;
    # while(<$source_fh>) {
    #     next unless /^\s*sub\s+(\w+)/;
    #     my $method = $1;
    #     my $sub = $_;
    #     while(<$source_fh>){
    #         $sub .= $_;
    #         last if /^}/;
    #     }
    #     $self->{_source_code}{$method} = $sub;
    # }
    # close($source_fh);
    #$self->current_files_output_path( $doc->get_output_path );
    #$self->_prepare($doc, $components, $mgr_desc);
    #   local $SIG{__WARN__} = sub { };

    open (my $fh, "<:encoding($charset)", $doc->origin) or warn $!;
    my $output;
    $parser->output_string(\$output);
    $parser->parse_file($fh);#
    #$self->parse_string_document('head1 NAME TEST');
    #close $fh;

    #my $title = $self->_get_title;
    #$doc->title($title);
    #$self->current_files_output_path('');

    return $output;
}


1;
